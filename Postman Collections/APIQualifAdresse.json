{
  "variables": [],
  "info": {
    "name": "APIQualifAdresse",
    "_postman_id": "fc60be3e-2095-d3e6-fbab-34cb5510b49f",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "01cc7e08-8da0-9896-48fb-01f3a5ae3fcb",
      "name": "globalTestFunction",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// npm install -g newman # il faut avoir node.js installé",
              "// Exporter les tests sous APIQualifAdresse.postman_collection.json",
              "// local.postman_environment.json doit contenir les variables d'environnements {{APIQADR}}",
              "// newman run --color -n1 -g local.postman_environment.json APIQualifAdresse.postman_collection.json",
              "",
              "var expected = {};",
              "",
              "expected.http_status_code = 500;",
              "expected.response_time_ms = 10000;",
              "expected.body = {",
              "  \"errors\": {",
              "    \"code\": \"RU-PREST-0042\",",
              "    \"message\": \"cURL error 6: Could not resolve host: national.cpn.rec.sie.courrier.intra.laposte.fr (see http://curl.haxx.se/libcurl/c/libcurl-errors.html)\"",
              "  }",
              "};",
              "",
              "var globalTest = function test(expected) {",
              "    ",
              "    if (expected.http_status_code) {",
              "        tests[\"Http Status code\"] = responseCode.code === expected.http_status_code;",
              "        if (responseCode.code !== expected.http_status_code) {",
              "            console.log (\"Expect: \" + expected.http_status_code);",
              "            console.log (\"Result: \" + responseCode.code);",
              "        }",
              "    }",
              "    ",
              "    if (expected.response_time_ms) {",
              "        tests[\"Response time\"] = responseTime < expected.response_time_ms;",
              "        if (responseTime > expected.response_time_ms) {",
              "            console.log (\"Expect: \" + expected.response_time_ms);",
              "            console.log (\"Result: \" + responseTime);",
              "        }",
              "    }",
              "    ",
              "    if (expected.response_time_ms) {",
              "        tests[\"Response time\"] = responseTime < expected.response_time_ms;",
              "        if (responseTime > expected.response_time_ms) {",
              "            console.log (\"Expect: \" + expected.response_time_ms);",
              "            console.log (\"Result: \" + responseTime);",
              "        }",
              "    }",
              "    ",
              "    if (expected.content_type) {",
              "        tests[\"Content-Type\"] = postman.getResponseHeader(\"Content-Type\") == expected.content_type;",
              "        if (postman.getResponseHeader(\"Content-Type\") !== expected.content_type) {",
              "            console.log (\"Expect: \" + expected.content_type);",
              "            console.log (\"Result: \" + postman.getResponseHeader(\"Content-Type\"));",
              "        }",
              "    }",
              "    ",
              "    if (expected.body) {",
              "        var responseBodyData = JSON.parse(responseBody);",
              "        tests[\"Body\"] = _.isEqual(responseBodyData, expected.body);",
              "        if (!_.isEqual(responseBodyData, expected.body)) {",
              "            console.log (\"Expect: \" + expected.body);",
              "            console.log (\"Result: \" + responseBodyData);",
              "        }",
              "    }",
              "    ",
              "    if (expected.bodyContainsText) {",
              "        tests[\"Body contains text\"] = responseBody.has(expected.bodyContainsText);",
              "        if (!responseBody.has(expected.bodyContainsText)) {",
              "            console.log (\"Expected: \" + expected.bodyContainsText);",
              "            console.log (\"Result: \" + responseBody);",
              "        }",
              "    }",
              "    ",
              "}",
              "postman.setEnvironmentVariable(\"globalTest\", globalTest);",
              "",
              "",
              "// usage ",
              "",
              "// var expected = {};",
              "// expected.http_status_code = 500;",
              "// expected.response_time_ms = 10000;",
              "// expected.content_type = \"appication/json\";",
              "// expected.body = {\"test\":true};",
              "// expected.bodyContainsText = \"test\";",
              "",
              "// var globalTest = eval('('+environment.globalTest+')');",
              "// globalTest(expected);",
              "",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{APIQADR}}/address/v1/analyse?address_row4=61 rue de caulaincourt&address_row6=75010 paris&params=distribution_site",
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"partner\":\"SONDE\",\r\n    \"model\":\"GENERIC_SMS\",\r\n    \"datas\": {\r\n        \"sms\": {\r\n            \"gsm\": \"{{NUMERO_TEL}}\",\r\n            \"content\": \"Ceci est un SMS de l'équipe de notification.\"\r\n        }\r\n    },\r\n    \"tags\": [\r\n        \"test1\",\r\n        \"test2\"\r\n    ]\r\n}\r\n"
        },
        "description": ""
      },
      "response": []
    }
  ]
}